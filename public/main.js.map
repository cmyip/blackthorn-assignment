{"version":3,"sources":["./src/app/core/interceptors/token.interceptor.ts","./src/app/core/interceptors/index.ts","./src/environments/environment.ts","./src/app/shared/services/enviroment.service.ts","./src/app/core/interceptors/loader.interceptor.ts","./src/app/shared/components/spinner-loader/spinner-loader.component.ts","./src/app/shared/components/spinner-loader/spinner-loader.component.html","./src/app/shared/services/base.service.ts","./src/app/core/guards/authentication.guard.ts","./src/app/core/utils/helper.ts","./src/app/core/providers/enviroment.provider.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/notification/notification.module.ts","./src/app/shared/services/authentication.service.ts","./src/app/app.module.ts","./src/app/shared/services/index.ts","./src/app/notification/notification.service.ts","./src/app/shared/services/logger.service.ts","./src/app/shared/services/loader.service.ts","./src/app/core/interceptors/error-handler.interceptor.ts","./src/app/shared/services/authentication-api.service.ts","./src/app/shared/services/user.service.ts","./src/app/core/guards/not-authentication.guard.ts","./src/app/core/core.module.ts","./src/app/shared/services/credentials.service.ts","./src/app/shared/components/spinner-loader/spinner-loader.module.ts","./src/app/app-routing.module.ts","./src/app/core/interceptors/api-prefix.interceptor.ts","./src/app/core/guards/index.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {AuthenticationService} from '../../shared/services';\n\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n  constructor(private authService: AuthenticationService) {\n  }\n\n  intercept(\n    req: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    if (this.authService.credentials) {\n      let authorization = `Bearer ${this.authService.credentials.token}`;\n      const isAuth =\n        this.authService.credentials.type === null ||\n        this.authService.credentials.type === undefined;\n      if (!isAuth) {\n        authorization = authorization.replace(\n          /^/,\n          this.authService.credentials.type\n        );\n      }\n      req = req.clone({\n        setHeaders: {\n          'Access-Control-Allow-Origin': '*',\n          Authorization: authorization\n        }\n      });\n    }\n    return next.handle(req);\n  }\n}\n","export * from './api-prefix.interceptor';\nexport * from './loader.interceptor';\nexport * from './error-handler.interceptor';\nexport * from './token.interceptor';\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class EnvironmentService {\n  private BASE_URL: string;\n\n  get baseUrl() {\n    return this.BASE_URL;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {LoaderService} from '../../shared/services/loader.service';\nimport {finalize} from 'rxjs/operators';\nimport {OverlayRef} from '@angular/cdk/overlay';\n\n@Injectable()\nexport class LoaderInterceptor implements HttpInterceptor {\n\n  constructor(\n    private loaderService: LoaderService\n  ) {}\n\n  intercept(\n    req: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    this.showOverlay();\n    return next.handle(req).pipe(\n      finalize(() => {\n        this.disposeRef();\n      })\n    );\n  }\n\n  private showOverlay(): OverlayRef {\n    return this.loaderService.open();\n  }\n\n  private disposeRef(): void {\n    this.loaderService.close();\n  }\n}\n","import {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-spinner-loader',\n  templateUrl: './spinner-loader.component.html',\n  styleUrls: ['./spinner-loader.component.scss']\n})\nexport class SpinnerLoaderComponent implements OnInit {\n  @Input() diameter: boolean;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"spinner-loader-container w-full h-full\">\n  <div class=\"overlay absolute left-50 top-50\">\n    <nz-spin nzSimple [nzSize]=\"'large'\"></nz-spin>\n  </div>\n</div>\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders, HttpParams, HttpResponse} from '@angular/common/http';\nimport {map} from 'rxjs/operators';\nimport {Observable} from 'rxjs';\nimport {ResponseApi} from '@approot/core/interfaces';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BaseService {\n  private readonly httpHeaders = new HttpHeaders();\n  private readonly httpOptions = {};\n\n  constructor(\n    private httpClient: HttpClient\n  ) {\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json; charset=utf-8',\n        'Access-Control-Allow-Origin': '*',\n        'Cache-Control': 'no-cache'\n      })\n    };\n    this.httpHeaders = new HttpHeaders(this.httpOptions);\n  }\n\n  private static extractData(response: HttpResponse<ResponseApi<any>>): object {\n    const responseData: any = response;\n    console.log(responseData)\n    if (!responseData) {\n      return {};\n    }\n    if (!responseData.success) {\n      throw new Error(responseData.message);\n    }\n    return responseData.data;\n  }\n\n  get(uri: string, params?: any): Observable<any> {\n    return this.httpClient\n      .get(uri, {headers: this.httpHeaders, params })\n      .pipe(\n        map(BaseService.extractData),\n      );\n  }\n\n  // api post method\n  post(uri: string, data?: any, params?: HttpParams): Observable<any> {\n    return this.httpClient\n      .post(uri, data, {\n        headers: this.httpHeaders,\n        params\n      })\n      .pipe(\n        map(BaseService.extractData),\n      );\n  }\n\n\n  // api put method\n  put(uri: string, data?: any, params?: any): Observable<any> {\n    return this.httpClient\n      .put(uri, data, {\n        headers: this.httpHeaders,\n        params\n      })\n      .pipe(\n        map(BaseService.extractData),\n      );\n  }\n\n  // api delete method\n  delete(uri: string, params?: HttpParams): Observable<any> {\n    return this.httpClient\n      .delete(`${uri}`, {\n        headers: this.httpHeaders,\n        params\n      })\n      .pipe(\n        map(BaseService.extractData),\n      );\n  }\n\n\n}\n","import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, CanActivate, CanActivateChild, Router, RouterStateSnapshot, UrlTree} from '@angular/router';\nimport {Observable, of} from 'rxjs';\nimport {NotificationService} from '../../notification/notification.service';\nimport {AuthenticationService} from '../../shared/services';\n\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthenticationGuard implements CanActivate, CanActivateChild {\n  constructor(\n    private router: Router,\n    private authenticationService: AuthenticationService,\n  ) {\n  }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    if (this.authenticationService.isAuthenticated) {\n      return of(true);\n    }\n\n    this.router.navigate(['/auth/login']).then();\n    return of(true);\n  }\n\n  canActivateChild(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): boolean | UrlTree {\n    return true;\n  }\n}\n","import {HttpParams} from '@angular/common/http';\n\nexport function fmt<TObject>(text: string, myHash: TObject): string {\n  let key;\n  // tslint:disable-next-line: forin\n  for (key in myHash) {\n    text = text.replace(new RegExp('\\\\{' + key + '\\\\}', 'gm'), myHash[key]);\n  }\n  return text;\n}\n\nexport function isEmpty(args: any): boolean {\n  return (\n    args === null || args === undefined || args === ''\n    || args.length === 0 || args === 'null' || args === 'undefined'\n  );\n}\n\nexport function isNotEmpty(args: any): boolean {\n  return !isEmpty(args);\n}\n\n\n// tslint:disable-next-line: ban-types\nexport function mapToHttpParamsQuery(params: Object): HttpParams {\n  let httpParams: HttpParams = new HttpParams();\n  for (const property in params) {\n    if (params.hasOwnProperty(property) && isNotEmpty(params[property])) {\n      httpParams = httpParams.set(property, params[property]);\n    }\n  }\n  return httpParams;\n}\n\nexport function mapToFormData(body: object): FormData {\n  const formData = new FormData();\n  for (const property in body) {\n    if (body.hasOwnProperty(property) && isNotEmpty(body[property])) {\n      formData.append(property, body[property]);\n    }\n  }\n  return formData;\n}\n\nexport function removeTheFirstChar(args: string): string {\n  if (isEmpty(args)) {\n    return '';\n  }\n  return args.substring(1, args.length);\n}\n\nexport function removeTheLastChar(args: string): string {\n  if (isEmpty(args)) {\n    return '';\n  }\n  return args.substring(0, args.length - 1);\n}\n\nexport function isString(object: any): boolean {\n  return typeof object === 'string';\n}\n\n\nexport function deepCopyObject(source, target): void {\n  Object.keys(source).forEach((property) => {\n    target[property] = source[property];\n  });\n}\n\n\nexport function convertToInt(d): number {\n  return Math.floor(d);\n}\n\nexport function convertToCurrency(d): string {\n  const formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD'\n  });\n  return formatter.format(d);\n}\n","import {EnvironmentService} from '@approot/shared/services';\n\nexport const EnvironmentServiceFactory = () => {\n  const environment = new EnvironmentService();\n  const env = 'environment';\n  const browserWindowEnvironment = window[env] || {};\n  for (const key in browserWindowEnvironment) {\n    if (browserWindowEnvironment.hasOwnProperty(key)) {\n      environment[key] = browserWindowEnvironment[key];\n    }\n  }\n  return environment;\n};\n\nexport const EnvironmentServiceProvider: any = {\n  provide: EnvironmentService,\n  useFactory: EnvironmentServiceFactory,\n  deps: []\n};\n","import {AfterViewInit, Component} from '@angular/core';\nimport {NavigationCancel, NavigationEnd, NavigationStart, Router} from '@angular/router';\nimport * as relativeTime from 'dayjs/plugin/relativeTime';\nimport * as dayjs from 'dayjs';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements AfterViewInit {\n  loading = false;\n\n  constructor(\n    private router: Router\n  ) {\n      this.loading = true;\n      dayjs.extend(relativeTime);\n  }\n\n  ngAfterViewInit(): void {\n    this.router.events.subscribe((event) => {\n      if (\n        event instanceof NavigationEnd || event instanceof NavigationCancel\n      ) {\n        this.loading = false;\n      }\n    });\n  }\n}\n","<div class=\"app-layout\">\n  <app-spinner-loader [hidden]=\"!loading\"></app-spinner-loader>\n  <div [hidden]=\"loading\" class=\"router-output\">\n    <router-outlet></router-outlet>\n  </div>\n</div>\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {NotificationService} from './notification.service';\nimport {NzNotificationModule} from 'ng-zorro-antd/notification';\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    NzNotificationModule\n  ],\n  providers: [\n    NotificationService\n  ]\n})\nexport class NotificationModule {\n}\n","import { Injectable } from '@angular/core';\nimport {CredentialsService} from './credentials.service';\nimport {Credentials} from '../../core/interfaces';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  constructor(\n    private credentialsService: CredentialsService\n  ) { }\n\n  get isAuthenticated(): boolean {\n    return !!this.credentialsService.isAuthenticated;\n  }\n\n  get credentials(): Credentials | null {\n    return this.credentialsService.getCredentials;\n  }\n  get email(): string | null {\n    return this.credentialsService.email;\n  }\n\n  login(context: Credentials, remember?: boolean): void {\n    this.credentialsService.setCredentials(context, remember);\n  }\n\n  logout(): void {\n    this.credentialsService.setCredentials(null);\n  }\n}\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {HttpClientModule} from '@angular/common/http';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {en_US, NZ_I18N} from 'ng-zorro-antd/i18n';\nimport {registerLocaleData} from '@angular/common';\nimport en from '@angular/common/locales/en';\nimport {SpinnerLoaderModule} from '@approot/shared/components/spinner-loader/spinner-loader.module';\nimport {CoreModule} from '@approot/core/core.module';\nimport {NotificationModule} from '@approot/notification/notification.module';\n\nregisterLocaleData(en);\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    SpinnerLoaderModule,\n    CoreModule,\n    NotificationModule\n  ],\n  providers: [{provide: NZ_I18N, useValue: en_US}],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","export * from './authentication-api.service';\nexport * from './authentication.service';\nexport * from './base.service';\nexport * from './credentials.service';\nexport * from './logger.service';\nexport * from './enviroment.service';\nexport * from './user.service';\n","import {Injectable} from '@angular/core';\nimport {NzNotificationService} from 'ng-zorro-antd/notification';\n\n@Injectable()\nexport class NotificationService {\n\n  private readonly type = {\n    info: 'info',\n    success: 'success',\n    warning: 'warning',\n    error: 'error',\n  };\n\n  constructor(\n    private notification: NzNotificationService\n  ) {\n  }\n\n  showSuccess(title, content): void {\n    this.notification.create(\n      this.type.success,\n      title,\n      content\n    );\n  }\n\n  showWarning(title, content): void {\n    this.notification.create(\n      this.type.warning,\n      title,\n      content\n    );\n  }\n\n  showError(title, content): void {\n    this.notification.create(\n      this.type.error,\n      title,\n      content\n    );\n  }\n\n  showInfo(title, content): void {\n    this.notification.create(\n      this.type.info,\n      title,\n      content\n    );\n  }\n\n}\n","export enum LogLevel {\n  Off = 0,\n  Error,\n  Warning,\n  Info,\n  Debug,\n}\n\nexport type LogOutput = (\n  source: string,\n  level: LogLevel,\n  ...objects: any[]\n) => void;\n\nexport class Logger {\n  static level = LogLevel.Debug;\n\n  static outputs: LogOutput[] = [];\n\n  constructor(private source?: string) {}\n\n  debug(...objects: any[]): void {\n    this.log(console.log, LogLevel.Debug, objects);\n  }\n\n  info(...objects: any[]): void {\n    this.log(console.log, LogLevel.Info, objects);\n  }\n\n  warn(...objects: any[]): void {\n    this.log(console.warn, LogLevel.Warning, objects);\n  }\n\n  error(...objects: any[]): void {\n    this.log(console.error, LogLevel.Error, objects);\n  }\n\n  private log(func: () => void, level: LogLevel, objects: any[]): void {\n    if (level <= Logger.level) {\n      const log = this.source\n        ? ['[' + this.source + ']'].concat(objects)\n        : objects;\n      // func.apply(console, log);\n      Logger.outputs.forEach((output) =>\n        output.apply(output, [this.source, level].concat(objects))\n      );\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {GlobalPositionStrategy, Overlay, OverlayConfig, OverlayRef} from '@angular/cdk/overlay';\nimport {ComponentPortal} from '@angular/cdk/portal';\nimport {SpinnerLoaderComponent} from '../components/spinner-loader/spinner-loader.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoaderService {\n  private overlayRef: OverlayRef;\n\n  constructor(private overlay: Overlay) {}\n\n  open(): OverlayRef {\n    if (this.overlayRef) {\n      return this.overlayRef;\n    }\n    const positionStrategy: GlobalPositionStrategy = this.overlay\n      .position()\n      .global()\n      .centerHorizontally()\n      .centerVertically();\n    const overlayConfig = new OverlayConfig({\n      hasBackdrop: true,\n      positionStrategy,\n    });\n    const overlayRef = this.overlay.create(overlayConfig);\n    const portal = new ComponentPortal(SpinnerLoaderComponent);\n    overlayRef.attach(portal);\n    this.overlayRef = overlayRef;\n    return this.overlayRef;\n  }\n\n  close() {\n    setTimeout(() => {\n      if (this.overlayRef !== null) {\n        this.overlayRef.dispose();\n      }\n      this.overlayRef = null;\n    }, 1000);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\nimport {Observable, throwError} from 'rxjs';\nimport {AuthenticationService} from '@approot/shared/services';\nimport {Router} from '@angular/router';\nimport {catchError, retry} from 'rxjs/operators';\nimport {NotificationService} from '@approot/notification/notification.service';\n\n@Injectable()\nexport class ErrorHandlerInterceptor implements HttpInterceptor {\n\n  constructor(\n    private router: Router,\n    private authenticationService: AuthenticationService,\n    private notificationService: NotificationService\n  ) {\n  }\n\n  intercept(\n    request: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    return next.handle(request).pipe(\n      retry(1),\n      catchError((err) => this.errorHandler(err))\n    );\n  }\n\n  private errorHandler(response: HttpErrorResponse): Observable<HttpEvent<any>> {\n    if (response.status === 401) {\n      if (this.router.url !== '/auth/login') {\n        this.notificationService.showError('You are not authenticated', response.error.message);\n        this.authenticationService.logout();\n        this.router.navigateByUrl('/auth/login').then();\n        return;\n      }\n    }\n    if (response.status === 403) {\n      this.notificationService.showError('You dont have permission', response.error.message);\n    }\n    return throwError(response.error);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {BaseService} from './base.service';\nimport {Observable} from 'rxjs';\nimport {AuthInterface, ResponseApi} from '../../core/interfaces';\n\nconst router = {\n  login: `/auth/login`,\n  checkAdmin: `/auth/checkAdmin`,\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationApiService {\n\n  constructor(\n    private baseService: BaseService\n  ) { }\n\n  login(user: AuthInterface): Observable<any> {\n    return this.baseService.post(router.login, user);\n  }\n\n  checkAdmin(): Observable<ResponseApi<boolean>> {\n    return this.baseService.get(router.checkAdmin);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { UserCreateDto } from '@approot/core/dtos';\nimport { ResponseApi, UserInterface } from '@approot/core/interfaces';\nimport { fmt } from '@approot/core/utils/helper';\nimport { Observable } from 'rxjs';\nimport { BaseService } from './base.service';\n\nconst router = {\n  getAll: `/user/getAll`,\n  getOne: `/user/getOne/{userId}`,\n  update: `/user/update/{userId}`,\n  delete: `/user/delete/{userId}`,\n  create: `/user/create`,\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(\n    private baseService: BaseService\n  ) {\n  }\n\n  loadUsers(): Observable<ResponseApi<UserInterface[]>> {\n    return this.baseService.get(router.getAll);\n  }\n\n  loadUserById(userId: number): Observable<ResponseApi<UserInterface>> {\n    const uri = fmt(router.getOne, {userId});\n    return this.baseService.get(uri);\n  }\n\n  createUser(user: UserCreateDto): Observable<ResponseApi<boolean>> {\n    return this.baseService.post(router.create, user);\n  }\n\n  updateUser(userId: number, user: UserCreateDto): Observable<ResponseApi<boolean>> {\n    const uri = fmt(router.update, {userId});\n    return this.baseService.put(uri, user);\n  }\n\n  deleteUser(userId: number): Observable<ResponseApi<boolean>> {\n    const uri = fmt(router.delete, {userId});\n    return this.baseService.delete(uri);\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree} from '@angular/router';\nimport {Observable, of} from 'rxjs';\nimport {AuthenticationService} from '../../shared/services';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotAuthenticationGuard implements CanActivate {\n  constructor(\n    private router: Router,\n    private authenticationService: AuthenticationService,\n  ) {\n  }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    if (!this.authenticationService.isAuthenticated) {\n      return of(true);\n    }\n\n    this.router.navigate(['/']).then();\n    return of(true);\n  }\n}\n","import {NgModule, Optional, SkipSelf} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {HTTP_INTERCEPTORS} from '@angular/common/http';\nimport {EnvironmentServiceProvider} from './providers/enviroment.provider';\nimport {ApiPrefixInterceptor, ErrorHandlerInterceptor, LoaderInterceptor, TokenInterceptor} from './interceptors';\nimport {OverlayModule} from '@angular/cdk/overlay';\n\nconst interceptors = [\n  {\n    provide: HTTP_INTERCEPTORS,\n    useClass: ApiPrefixInterceptor,\n    multi: true,\n  },\n  {\n    provide: HTTP_INTERCEPTORS,\n    useClass: LoaderInterceptor,\n    multi: true,\n  },\n  {\n    provide: HTTP_INTERCEPTORS,\n    useClass: TokenInterceptor,\n    multi: true,\n  },\n  {\n    provide: HTTP_INTERCEPTORS,\n    useClass: ErrorHandlerInterceptor,\n    multi: true,\n  },\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    OverlayModule\n  ],\n  providers: [\n    ...interceptors,\n    EnvironmentServiceProvider\n  ],\n  declarations: [],\n})\nexport class CoreModule {\n  constructor(@Optional() @SkipSelf() parentModule: CoreModule) {\n    if (parentModule) {\n      throw new Error(\n        `${parentModule} has already been loaded. Import Core module in the AppModule only.`\n      );\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {Credentials} from '../../core/interfaces';\n\nexport const CURRENT_USER = 'CURRENT_USER';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CredentialsService {\n  private credentials: Credentials | null = null;\n\n  constructor() {\n    const savedCredentials =\n      sessionStorage.getItem(CURRENT_USER) ||\n      localStorage.getItem(CURRENT_USER);\n    if (savedCredentials) {\n      this.credentials = JSON.parse(savedCredentials);\n    }\n  }\n\n  get isAuthenticated(): boolean {\n    return !!this.credentials;\n  }\n\n  get getCredentials(): Credentials | null {\n    const savedCredentials =\n      sessionStorage.getItem(CURRENT_USER) ||\n      localStorage.getItem(CURRENT_USER);\n    if (savedCredentials) {\n      this.credentials = JSON.parse(savedCredentials);\n    }\n    return this.credentials;\n  }\n\n  get email(): string {\n    const credential = this.getCredentials;\n    if (credential) {\n      return credential.email;\n    }\n    return null;\n  }\n\n  setCredentials(credentials?: Credentials, remember?: boolean): void {\n    this.credentials = credentials || null;\n    if (credentials) {\n      const storage = remember ? localStorage : sessionStorage;\n      storage.setItem(CURRENT_USER, JSON.stringify(credentials));\n    } else {\n      sessionStorage.removeItem(CURRENT_USER);\n      localStorage.removeItem(CURRENT_USER);\n      localStorage.clear();\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SpinnerLoaderComponent } from './spinner-loader.component';\nimport {NzSpinModule} from 'ng-zorro-antd/spin';\n\n\n\n@NgModule({\n    declarations: [SpinnerLoaderComponent],\n    exports: [\n        SpinnerLoaderComponent\n    ],\n  imports: [\n    CommonModule,\n    NzSpinModule\n  ]\n})\nexport class SpinnerLoaderModule { }\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {AuthenticationGuard, NotAuthenticationGuard} from '@approot/core/guards';\n\nconst routes: Routes = [\n  {\n    path: '',\n    loadChildren: () => import('@approot/layout/layout.module').then(m => m.LayoutModule),\n    canActivate: [\n      NotAuthenticationGuard\n    ]\n  },\n  /*{\n    path: 'auth',\n    loadChildren: () => import('@approot/authentication/authentication.module').then(m => m.AuthenticationModule),\n    canActivate: [\n      NotAuthenticationGuard\n    ]\n  },*/\n  {\n    path: '**',\n    redirectTo: '/welcome',\n    pathMatch: 'full'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","import {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\nimport {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {EnvironmentService} from '@approot/shared/services';\n\n\n@Injectable()\nexport class ApiPrefixInterceptor implements HttpInterceptor {\n  constructor(private envService: EnvironmentService) {\n  }\n\n  intercept(\n    request: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    request = request.clone({\n      url: this.envService.baseUrl + request.url,\n    });\n\n    return next.handle(request);\n  }\n}\n","export * from './authentication.guard';\nexport * from './not-authentication.guard';\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}